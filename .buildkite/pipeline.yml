env:
  SEGMENT_CONTEXTS: 'snyk,npm,aws-credentials'
  SEGMENT_BUILDKITE_IMAGE: 'buildkite-agent-node12'

steps:
  - label: 'Test'
    agents:
      queue: v1
    commands: |
      echo '--- Configuring NPM auth'
      npm config set "//registry.npmjs.org/:_authToken" $${NPM_TOKEN}

      echo '--- Fetching dependencies'
      npm install
      PATH=$(npm bin):$PATH

      echo '--- Snyk scan'
      bk-snyk

      echo '--- Linting'
      npm run lint

      echo '--- Testing'
      npm run test

  - label: ':mag: Check Production Dependencies'
    agents:
      queue: v1
    commands: |
      echo '--- Install production dependencies'
      npm config set "//registry.npmjs.org/:_authToken" $${NPM_TOKEN}
      npm install --only=production
      echo '--- Test that the server can boot with just the production dependencies'
      node -e "require('./src/boot'); process.exit(0)"
    plugins:
      - ssh://git@github.com/segmentio/cache-buildkite-plugin#v3.0.0:
          key: "v1-cache-prod-{{ checksum 'package-lock.json' }}"
          paths: ['node_modules/']
          save: true

  - wait: ~

  - label: ':docker: Docker Build and Publish to Trebuchet'
    agents:
      queue: v1
    branches: master staging
    commands: |
      echo '--- Build docker image'
      docker build -t $${TREB_IMAGE_TAG} -t fab-5-engine:latest . | sed 's/^Step/--- Step/g'
      echo '--- Tag docker image'
      docker tag $${TREB_IMAGE_TAG} $${TREB_SHORT_IMAGE_TAG}
      docker tag fab-5-engine:latest ${ECR_REPOSITORY}/fab-5-engine:latest
      echo '--- Push docker image'
      docker push $${TREB_IMAGE_TAG}
      docker push ${ECR_REPOSITORY}/fab-5-engine:latest
      echo '--- Publish to Trebuchet'
      treb-publish .run/fab-5-engine.yml
    plugins:
      - ssh://git@github.com/segmentio/cache-buildkite-plugin#v3.0.0:
          key: "v1-cache-prod-{{ checksum 'package-lock.json' }}"
          paths: ['node_modules/']
